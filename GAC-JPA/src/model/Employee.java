package model;

<<<<<<< HEAD
// Generated 14 janv. 2013 16:54:08 by Hibernate Tools 3.4.0.CR1
=======
// Generated 14 janv. 2013 14:20:50 by Hibernate Tools 3.4.0.CR1
>>>>>>> branch 'master' of https://github.com/Meg4mi/GAC.git

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Employee implements java.io.Serializable {

	private Integer idemployee;
	private String email;
	private String password;
	private String firstname;
	private String lastname;
	private Integer age;
	private Date indate;
	private byte[] picture;
	private Set<Activity> activities = new HashSet<Activity>(0);
	private Set<Conversation> conversationsForCalledIdemployee = new HashSet<Conversation>(
			0);
	private Set<Project> projects = new HashSet<Project>(0);
	private Set<Conversation> conversationsForCallerIdemployee = new HashSet<Conversation>(
			0);
	private Set<Message> messages = new HashSet<Message>(0);

	public Employee() {
	}

	public Employee(String email, String password, String firstname,
			String lastname, Integer age, Date indate, byte[] picture,
			Set<Activity> activities,
			Set<Conversation> conversationsForCalledIdemployee,
			Set<Project> projects,
			Set<Conversation> conversationsForCallerIdemployee,
			Set<Message> messages) {
		this.email = email;
		this.password = password;
		this.firstname = firstname;
		this.lastname = lastname;
		this.age = age;
		this.indate = indate;
		this.picture = picture;
		this.activities = activities;
		this.conversationsForCalledIdemployee = conversationsForCalledIdemployee;
		this.projects = projects;
		this.conversationsForCallerIdemployee = conversationsForCallerIdemployee;
		this.messages = messages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idemployee", unique = true, nullable = false)
	public Integer getIdemployee() {
		return this.idemployee;
	}

	public void setIdemployee(Integer idemployee) {
		this.idemployee = idemployee;
	}

	@Column(name = "email", unique = true, length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password")
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "firstname", length = 45)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname", length = 45)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "age")
	public Integer getAge() {
		return this.age;
	}

	public void setAge(Integer age) {
		this.age = age;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "indate", length = 19)
	public Date getIndate() {
		return this.indate;
	}

	public void setIndate(Date indate) {
		this.indate = indate;
	}

	@Column(name = "picture")
	public byte[] getPicture() {
		return this.picture;
	}

	public void setPicture(byte[] picture) {
		this.picture = picture;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Activity> getActivities() {
		return this.activities;
	}

	public void setActivities(Set<Activity> activities) {
		this.activities = activities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeByCalledIdemployee")
	public Set<Conversation> getConversationsForCalledIdemployee() {
		return this.conversationsForCalledIdemployee;
	}

	public void setConversationsForCalledIdemployee(
			Set<Conversation> conversationsForCalledIdemployee) {
		this.conversationsForCalledIdemployee = conversationsForCalledIdemployee;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(Set<Project> projects) {
		this.projects = projects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employeeByCallerIdemployee")
	public Set<Conversation> getConversationsForCallerIdemployee() {
		return this.conversationsForCallerIdemployee;
	}

	public void setConversationsForCallerIdemployee(
			Set<Conversation> conversationsForCallerIdemployee) {
		this.conversationsForCallerIdemployee = conversationsForCallerIdemployee;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

}
